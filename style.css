*, *::before, *::after {
    box-sizing: border-box;
    font-family: 'Roboto Mono', monospace;
}

body {
    background-color: hsl(215, 40%, 10%);
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    margin: 0;
    padding: 2em;
    font-size: clamp(.5rem, 2.5vmin, 1.5rem);
}

h1 {
    display: flex;
    align-self: center;
    color: hsla(0, 0%, 100%, 0.85);
    font-weight: 700;
    font-size: 6em;
    margin: 0;
}

span {
    font-size: 0.5em;
    padding-top: 0.35em;
}

.keyboard {
    display: grid;
    grid-template-columns: repeat(20, minmax(auto, 1.25em));
    grid-auto-rows: 3em;
    gap: .3em;
    justify-content: center;
}

.key {
    font-size: inherit;
    font-weight: 300;
    grid-column: span 2;
    border: none;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: hsl(
        var(--hue, 215),
        var(--saturation, 40%),
        calc(var(--lightness-offset, 0%) + var(--lightness, 15%))
    );

    color:hsla(0, 0%, 100%, 0.8);
    fill: hsl(0, 0%, 100%, 0.8);
    border-radius: .15em;
    cursor: pointer;
    user-select: none;
}

.key.large {
    grid-column: span 3;
}

.key > svg {
    width: 1.25em;
    height: 1.25em;
}

.key:hover, .key:focus {
    --lightness-offset: 10%;
}

.key.wrong {
    --hue: 357;
    --lightness: 45%;
}

.key.wrong-location {
    --hue: 45;
    --lightness: 50%;
}

.key.correct {
    --hue: 145;
    --lightness: 35%;
}

.guess-grid {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;
  grid-template-columns: repeat(5, 4em);
  grid-template-rows: repeat(6, 4em);
  gap: .3em;
  margin-bottom: 1em;
}

.tile {
  font-size: 2em;
  font-weight: 300;
  color: hsla(0, 0%, 100%, 0.8);
  border: .05em solid hsla(0, 0%, 100%, 0.2);;
  text-transform: uppercase;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  transition: transform 250ms linear;
}

.tile[data-state="active"]{
    border-color: hsla(0, 0%, 100%, 0.5);
}

.tile[data-state="wrong"] {
    border: none;
    background-color: hsl(357, 40%, 45%);
}

.tile[data-state="wrong-location"] {
    border: none;
    background-color: hsl(45, 40%, 50%);
}

.tile[data-state="correct"] {
    border: none;
    background-color: hsl(145, 40%, 35%);
}

.tile.shake {
    animation: shake 500ms ease-in-out;
}

.tile.dance {
    animation: dance 500ms ease-in-out;
}

.tile.flip {
    transform: rotateX(90deg);
}

@keyframes shake {
    10% {
      transform: translateX(-5%);
    }
  
    30% {
      transform: translateX(5%);
    }
  
    50% {
      transform: translateX(-8%);
    }
  
    70% {
      transform: translateX(8%);
    }
  
    90% {
      transform: translateX(-5%);
    }
  
    100% {
      transform: translateX(0);
    }
  }
  
  @keyframes dance {
    20% {
      transform: translateY(-50%);
    }  
  
    40% {
      transform: translateY(5%);
    }  
  
    60% {
      transform: translateY(-25%);
    }  
  
    80% {
      transform: translateY(2.5%);
    }  
  
    90% {
      transform: translateY(-5%);
    }  
  
    100% {
      transform: translateY(0);
    }
  }

.alert-container {
    position: fixed;
    top: 25.6vh;
    left: 50vw;
    transform: translateX(-50%);
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.alert {
    pointer-events: none;
    background-color: hsl(215, 20%, 75%);
    padding: .75em;
    border-radius: 0.15em;
    opacity: 1;
    transition: opacity 250ms ease-in-out;
    margin-bottom: 1.46em;
}

.alert:last-child {
    margin-bottom: 0;
}

.alert.hide {
    opacity: 0;
}